<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                template="../template/ui.xhtml">
    <ui:define name="body">
        <style type="text/css">
            .btn-success {
                border-radius: 6px 0px 0px 6px !important;
                color: gainsboro;
            }

            .ui-accordion .ui-accordion-header.ui-state-active {
                background-color: gainsboro;
            }

            .ui-accordion .ui-accordion-header {
                color: crimson;
            }
        </style>
        <f:facet name="last">
            <h:outputStylesheet library="css" name="style.css"/>
        </f:facet>
        <p:panel id="myPanel1" styleClass="bColor" style="width:100%;height:100%;background-color: cornsilk">
            <p:panel id="myPanel2"
                    style="min-width:600px;min-height:600px;align-items: center;align-content: center;text-align: center;">


                <h:form id="myForm">
                    <h:outputText rendered="#{examController.currentTest.withTimer }"   id="txt_count" value="Temps restant : #{examController.numberSecond} s" />
                    <p:poll   interval="1"  listener="#{examController.incrementTime}" update="@form"  widgetVar="po23" />

                    <p:wizard widgetVar="myWizard" flowListener="#{examController.onFlowProcess}"  showNavBar="false" >
                        <c:forEach items="#{examController.currentTest.questions}" var="q" varStatus="loop">
                            <p:tab title="Question #{loop.index+1}">
                                <p:panel >
                                    <p:graphicImage rendered="#{q.imageUrl ne null }" library="upload" name="#{q.imageUrl}"  style="width: 500px;height: 300px" />
                                    <p:panel style="background-color: mintcream;font-size: 25px">
                                        <h:outputText value="Question :   #{q.text}"/>
                                    </p:panel>


                                    <h:panelGrid rendered="#{q.typeQuestionId eq 3}" columns="1" columnClasses="label, value">
                                        <c:forEach items="#{q.propositions}" var="pp" varStatus="loopProp">
                                            <p:panelGrid columns="2">
                                                <p:selectBooleanCheckbox value="#{pp.boolResponseValue}"/>
                                                <p:outputLabel>#{pp.text}</p:outputLabel>
                                            </p:panelGrid>
                                        </c:forEach>
                                    </h:panelGrid>

                                    <h:panelGrid rendered="#{q.typeQuestionId eq 4}" columns="1" columnClasses="label, value">
                                        <c:forEach items="#{q.propositions}" var="pp" varStatus="loopProp">
                                            <p:panelGrid columns="2">
                                                <p:outputLabel>#{pp.text}</p:outputLabel>
                                                <p:rating value="#{pp.responseValue}" stars="10" cancel="false"  />
                                            </p:panelGrid>
                                        </c:forEach>
                                    </h:panelGrid>

                                    <h:panelGrid rendered="#{q.typeQuestionId eq 1}" columns="1" columnClasses="label, value">
                                        <c:forEach items="#{q.propositions}" var="pp" varStatus="loopProp">
                                            <p:panelGrid columns="2">
                                                <p:outputLabel>#{pp.text}</p:outputLabel>
                                                <p:selectOneMenu  value="#{pp.responseValue}">
                                                    <f:selectItems value="#{q.propositionChoisesList}" />
                                                </p:selectOneMenu>
                                            </p:panelGrid>
                                        </c:forEach>
                                    </h:panelGrid>


                                    <h:panelGrid rendered="#{q.typeQuestionId eq 2}" columns="1" columnClasses="label, value">
                                        <p:selectOneRadio id="customRadio#{loop.index}" value="#{q.selectedRadioResponseValue}"  layout="custom" >
                                            <f:selectItems value="#{q.propositionList}" var="propSelect" itemLabel="#{propSelect}" itemValue="#{propSelect}">
                                            </f:selectItems>
                                        </p:selectOneRadio>
                                        <h:panelGrid columns="2" cellpadding="5">
                                            <c:forEach items="#{q.propositions}" var="pp" varStatus="loopProp">
                                                <p:radioButton  for="customRadio#{loop.index}" itemIndex="#{loopProp.index}" />
                                                <p:outputLabel>#{pp.text}</p:outputLabel>
                                            </c:forEach>
                                        </h:panelGrid>
                                    </h:panelGrid>


                                </p:panel>
                                <p:commandButton rendered="#{not loop.last}"  value="Next" icon="ui-icon-arrow-1-e" iconPos="left"  actionListener="#{examController.nextQuestion}" />
                                <p:commandButton rendered="#{loop.last}"  value="TerminÃ©" icon="ui-icon-arrow-1-e" iconPos="left" action="#{examController.saveExamResult}"  />
                            </p:tab>
                        </c:forEach>
                    </p:wizard>
                </h:form>
            </p:panel>
        </p:panel>
    </ui:define>
</ui:composition>



